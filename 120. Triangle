import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;

public class Triangle
{
    public static void main(String[] args) {
        Scanner scn = new Scanner(System.in);
        int no = scn.nextInt();
        List<List<Integer>> triangle = new ArrayList<Integer>(no);
        for (int i = 0; i < no ; i++)
        {
           triangle.add(new ArrayList());
        }
        int ans = minimumTotal(triangle);
        System.out.println(ans);
        scn.close();
    }

    public static int minimumTotal(List<List<Integer>> triangle) 
    {
       if(triangle.size() == 0) return 0;
        int row = triangle.size();
        int[] dp = new int[row+1]; // here I m taking + 1 because at last row will become so to avoid array out of bound i m adding 1 
        for(int i = row - 1 ; i >= 0 ; i--) // it is keeping count of row 
        {
            for(int j = 0 ; j <= i ; j++) // keeping count of colown
            {
                dp[j] = Math.min(dp[j], dp[j+1]) + triangle.get(i).get(j); // adding minimum value from each colume to dp array & in every iteration it adding the value to existing value so doing ths triangle.get(i).get(j) 
            }
        }
        return dp[0]; 
    }
}
